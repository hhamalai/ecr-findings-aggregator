---
apiVersion: v1
kind: Namespace
metadata:
  name: ecr-scanning
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ecr-scanning
  name: ecr-scanning
  namespace: ecr-scanning
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ecr-scanning
  template:
    metadata:
      labels:
        app: ecr-scanning
    spec:
      containers:
        - image: <YOUR_ACCOUNT_ID>.dkr.ecr.eu-west-1.amazonaws.com/ecr-cve-dashboard:0.1
          name: ecr-scanning
---
apiVersion: v1
kind: Service
metadata:
  name: ecr-scanning
  namespace: ecr-scanning
  labels:
    app: ecr-scanning
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      name: http
  selector:
    app: ecr-scanning
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ecr-scanning
  namespace: ecr-scanning
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/actions.response-401: '{"Type": "fixed-response", "FixedResponseConfig": {"ContentType":"text/plain", "StatusCode":"401", "MessageBody":"Unauthorized"}}'
    alb.ingress.kubernetes.io/inbound-cidrs: <YOUR_IP>/32
spec:
  rules:
    - host: <YOUR_HOST>
      http:
        paths:
          - path: /*
            backend:
              serviceName: ssl-redirect
              servicePort: use-annotation
          - path: /*
            backend:
              serviceName: ecr-scanning
              servicePort: 80
